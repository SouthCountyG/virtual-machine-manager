---
- hosts: localhost
  connection: local
  become: true
  gather_facts: false
  vars_files:
    - vars/vars.yml
  tasks:

  - name: Copying Image to libvirt path
    command: cp {{ qcow_image }} {{ libvirt_path }}/{{vm_name}}.qcow2

  - name: Resizing VM
    command: qemu-img resize {{ libvirt_path }}/{{ vm_name }}.qcow2 {{ vm_size }}
  
  - name: Copy meta-data template to tmp
    template:
      src: templates/meta-data
      dest: /tmp/meta-data
      owner: root
      group: root
      mode: 0644

  - name: Copy user-data template to tmp
    template:
      src: templates/user-data-custom
      dest: /tmp/user-data
      owner: root
      group: root
      mode: 0644

  - name: Create config
    command: genisoimage -o /tmp/config.iso -V cidata -r -J /tmp/meta-data /tmp/user-data

  - name: Create VM
    virt:
      name: "{{ vm_name }}"
      command: define
      xml: "{{ lookup('template', 'libvirt-domain.xml.j2') }}"
    #  xml: "{{ lookup('template', 'libvirt-domain-routed.xml.j2') }}"
      uri: 'qemu:///system'

  - name: Start VM
    virt:
      name: "{{ vm_name }}"
      state: running

  - name: Add config to VM
    command: virsh change-media {{ vm_name }} hda /tmp/config.iso --insert 

  - pause:
      seconds: 20

  - name: Get IP Address of New VM
    command: dig {{ vm_name }} {{ nameserver }} +short
    register: vm_ipaddr

  - name: Output New VM IPaddress
    debug:
      msg: "New VM IPaddress: {{ vm_ipaddr.stdout }}"

  - name: Set VM IP Address Fact
    set_fact:
      new_vm_ipaddr: "{{ vm_ipaddr.stdout }}"

  - name: Add Instance to in-memory inventory
    add_host:
      hostname: "{{ new_vm_ipaddr }}"
      groupname: new_vm_build

#- hosts: new_vm_build
#  become: true
#  tasks:
#
#  - name: Additional Roles
#    include_role:
#      name: "{{ item }}"
#    loop:
#      - standard_config
#      - reg_n_packs
#      - ansible_tower
